plot1 <- qplot(x=price, data=diamonds) +
ggtitle('Price')
plot2 <- qplot(x=log10(price), data=diamonds) +
ggtitle('Price (log10)')
grid.arrange(plot1, plot2)
library(RColorBrewer)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(color = clarity, alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
?scale
?scale_color_brewer
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(aes(color=clarity),alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(x = carat, y = price, color = cut), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = Cut, reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(aes(color=clarity),alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(0.2, 0.5, 1, 2, 3)) +
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(aes(color=clarity),alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
install.packages(c("abind", "arm", "BH", "caret", "coda", "coin", "contfrac", "curl", "DAAG", "DBI", "DiagrammeR", "digest", "distr", "distrEx", "distrTeach", "effects", "elliptic", "evaluate", "fOptions", "formatR", "geosphere", "ggmap", "ggthemes", "ggvis", "gplots", "gss", "HH", "highr", "Hmisc", "htmltools", "htmlwidgets", "httpuv", "hypergeo", "jsonlite", "Lahman", "latticeExtra", "lazyeval", "lme4", "maps", "mime", "multcomp", "munsell", "mvtnorm", "NLP", "nycflights13", "quantreg", "R6", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppEigen", "readr", "relimp", "rgl", "rJava", "Rmpfr", "RODBC", "rpart.plot", "rstudioapi", "Rttf2pt1", "sandwich", "scatterplot3d", "sem", "sfsmisc", "shiny", "sp", "SparseM", "stabledist", "startupmsg", "stringi", "stringr", "SweaveListingUtils", "TeachingDemos", "TH.data", "timeSeries", "VGAM", "XLConnect", "XLConnectJars", "XML", "xtable", "zoo"))
getwd()
install.packages("base64enc")
setwd("C:/DataAnalystNanodegree/Project4/ExploreCountyData/")
poverty <- read.csv("PovertyEstimates.csv")
unemployment <- read.csv("Unemployment.csv")
population <- read.csv("PopulationEstimates.csv")
education <- read.csv("Education.csv")
# Chunk 1: setup
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
# Chunk 2
setwd("C:/DataAnalystNanodegree/Project4/ExploreCountyData/")
poverty <- read.csv("PovertyEstimates.csv")
unemployment <- read.csv("Unemployment.csv")
population <- read.csv("PopulationEstimates.csv")
education <- read.csv("Education.csv")
# Chunk 3
population$Area_Name <- sub(",.+", "", population$Area_Name)
unemployment$Area_Name <- sub(",.+", "", unemployment$Area_Name)
# Chunk 4
library(dplyr)
df1 <- full_join(population, unemployment, by=c("FIPS", "State", "Area_Name"))
df2 <- full_join(df1, poverty, by=c("FIPS", "State", "Area_Name"))
df <- full_join (df2, education, by=c("FIPS", "State", "Area_Name"))
df <- df %>%
select(FIPS, State, Area_Name,
Economic_typology_2015, contains("Unemployment_rate"),
contains("Percent"), -contains("Med"), PCTPOVALL_2014,
contains("POP_ESTIMATE"), contains("R_birth"), contains("R_death"))
# Chunk 5
map <- data.frame(from=c(0,1,2,3,4,5),
to=c("Nonspecialized", "Farm", "Mining",
"Manufacturing", "Fed/State, Government", "Recreation"))
df$Economic_typology_2015 <- map$to[match(df$Economic_typology_2015, map$from)]
# Chunk 6
df <- tbl_df(df)
# Chunk 7
states_list <- c("AK","AL","AR","AZ","CA","CO","CT","DC","DE","FL","GA","HI",
"IA","ID","IL","IN","KS","KY","LA","MA","MD","ME","MI","MN",
"MO","MS","MT","NC","ND","NE","NH","NJ","NM","NV","NY","OH",
"OK","OR","PA","RI","SC","SD","TN","TX","UT","VA","VT","WA",
"WI","WV","WY")
# Chunk 8
df_states <- df %>%
filter(State %in% states_list)
area_identifiers <- paste('County|Parish|Borough|Area|Municipality|',
'City|city|Park|Division|Islands', sep="")
df_states_level <- df_states[!grepl(area_identifiers,
df_states$Area_Name),]
df_counties <- df_states[grepl(area_identifiers,
df_states$Area_Name),]
# Chunk 9
library(tidyr)
library(ggplot2)
library(gridExtra)
library(GGally)
unemployment_rates_df <- df_states_level %>%
select(contains("Unemployment_rate")) %>%
gather(key = year, value = unemployment_rate)
grid.arrange(ggplot(unemployment_rates_df, aes( x = 1, y = unemployment_rate ) ) +
geom_boxplot(alpha = 0.2, color = 'red' ),
ggplot(unemployment_rates_df, aes( x   = unemployment_rate ) ) +
geom_histogram(bins=30 ) +
scale_x_continuous(limits = c(0, NA)),
ncol=2)
# Chunk 10
ggplot(aes(x = year, y = unemployment_rate), data=unemployment_rates_df) +
geom_boxplot() +
scale_x_discrete(labels=c(2007,2008,2009,2010,2011,2012,2013,2014,2015))
# Chunk 11
unemployment_rates_df %>%
group_by(year) %>%
summarise(median_unemployment = median(unemployment_rate),
IQR_unemployment = IQR(unemployment_rate),
mean_unemployment = mean(unemployment_rate),
stddev_unemployment = sd(unemployment_rate))
# Chunk 12
df_states_level <- df_states_level %>% rename(Percent.of.adults.completing.some.college.1.3.years..1970 = Percent.of.adults.completing.some.college..1.3.years...1970, Percent.of.adults.completing.some.college.1.3.years..1980 = Percent.of.adults.completing.some.college..1.3.years...1980)
education_rates_df <- df_states_level %>%
select(Area_Name, contains("Percent")) %>%
gather(key = amountandyear, value = education_rate, -Area_Name) %>%
separate(amountandyear, c("amount", "year"), sep="\\.\\.")
#education_rates_df$education_rate[is.na(sapply(education_rates_df$education_rate, function (x) as.numeric(x)))]
amounts <- c("Percent.of.adults.with.less.than.a.high.school.diploma",
"Percent.of.adults.with.a.high.school.diploma.only",
"Percent.of.adults.completing.some.college.1.3.years",
"Percent.of.adults.completing.four.years.of.college.or.higher",
"Percent.of.adults.completing.some.college.or.associate.s.degree",
"Percent.of.adults.with.a.bachelor.s.degree.or.higher")
map <- data.frame(from=amounts,
to=c("No HS Diploma", "Only HS Diploma",
"Some College/Associate's",
"4-Years College/Bachelor's",
"Some College/Associate's",
"4-Years College/Bachelor's"))
education_rates_df$amount <- map$to[match(education_rates_df$amount, map$from)]
education_rates_df$education_rate <- as.numeric(education_rates_df$education_rate)
grid.arrange(ggplot(education_rates_df, aes( x = 1, y = education_rate ) ) +
geom_boxplot(alpha = 0.2, color = 'red' ),
ggplot(education_rates_df, aes( x   = education_rate ) ) +
geom_histogram(bins=30 ),
ncol=2)
# Chunk 13
grid.arrange(ggplot(education_rates_df, aes( x = 1, y = education_rate ) ) +
geom_boxplot(alpha = 0.2, color = 'red' ) +
facet_wrap(~amount),
ggplot(education_rates_df, aes( x   = education_rate ) ) +
geom_histogram(bins=30 ) +
facet_wrap(~amount),
ncol=2)
# Chunk 14
ggplot(aes(x=year, y=education_rate), data=education_rates_df) +
geom_boxplot() +
facet_wrap(~amount)
#LSHS HSD, CSC, C4M
#No HS Diploma, HS Diploma, Some College/Associate's
#, 4-Years College/Bachelor's
# Chunk 15
education_rates_df %>%
filter(amount == "4-Years College/Bachelor's") %>%
arrange(desc(education_rate)) %>%
filter(Area_Name == "District of Columbia")
# Chunk 16
grid.arrange(ggplot(df_states_level, aes( x = 1, y = PCTPOVALL_2014 ) ) +
geom_boxplot(alpha = 0.2, color = 'red' ),
ggplot(df_states_level, aes( x = PCTPOVALL_2014 ) ) +
geom_histogram(bins=10 ),
ncol=2)
# Chunk 17
#df_states_level$PCTPOVALL_2014
poverty_order <- arrange(df_states_level, PCTPOVALL_2014)
ggplot(aes(x=State, y=PCTPOVALL_2014), data=poverty_order) +
geom_bar(stat='identity') +
scale_x_discrete(limits=poverty_order$State) +
theme(axis.text.y  = element_text(angle=30, size=8)) +
coord_flip()
# Chunk 18
population_states <- df_states_level %>%
select(contains('POP_ESTIMATE')) %>%
gather(key = year, value = population)
population_states$population <- as.numeric(gsub(",", "",
population_states$population))
grid.arrange(ggplot(population_states, aes( x = 1, y = population ) ) +
geom_boxplot(alpha = 0.2, color = 'red' ),
ggplot(population_states, aes( x = population ) ) +
geom_histogram(bins=30 ),
ncol=2)
# Chunk 19
ggplot(aes(x = year, y = population), data=population_states) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
population_states %>%
group_by(year) %>%
summarise(median_pop = median(population),
IQR_pop = IQR(population),
mean_pop = mean(population),
std_pop = sd(population))
# Chunk 20
ggplot(df_counties, aes( x = Economic_typology_2015 ) ) +
geom_bar()
# Chunk 21
df_counties %>%
group_by(Economic_typology_2015) %>%
summarise(count = n(),
proportion = n()/dim(df_counties)[1])
# Chunk 22
unemployment_rates <- df_counties %>%
filter(!is.na(Economic_typology_2015)) %>%
select(Area_Name, Economic_typology_2015, contains("unemployment_rate")) %>%
gather(key = year, value = rate, contains("unemployment_rate")) %>%
filter(!is.na(rate)) %>%
arrange(Area_Name)
unemployment_rates$year <- sapply(unemployment_rates$year, function(x) as.numeric(gsub("Unemployment_rate_", "", x)))
ggplot(aes(x=factor(year),
y=rate,
color=Economic_typology_2015),
data=unemployment_rates) +
geom_boxplot()
# Chunk 23
mean_rates <- unemployment_rates %>%
group_by(Economic_typology_2015, year) %>%
summarise(median_rate = median(rate),
IQR_rate = IQR(rate),
mean_rate = mean(rate),
stddev_rate = sd(rate)) %>%
ungroup()
ggplot(aes(x=year, y=stddev_rate, color=Economic_typology_2015),
data=mean_rates) +
geom_line(size=1)
# Chunk 24
ggplot(aes(x=year, y=mean_rate, color=Economic_typology_2015),
data=mean_rates) +
geom_line(size=1)
# Chunk 25
mean_rates$increase_in_unemployment <- 0
#Not sure how to do this in a functional programming style, i.e. no for loop.
for(type in unique(mean_rates$Economic_typology_2015)) {
mean_rates[mean_rates$Economic_typology_2015 == type,]$increase_in_unemployment <- (mean_rates[mean_rates$Economic_typology_2015 == type,]$mean_rate) -
(mean_rates[mean_rates$Economic_typology_2015 == type & mean_rates$year == 2007,]$mean_rate)
}
ggplot(aes(x = year, y = increase_in_unemployment,
color = Economic_typology_2015),
data=mean_rates) +
geom_line(size=1)
# Chunk 26
df_counties <- df_counties %>% rename(Percent.of.adults.completing.some.college.1.3.years..1970 = Percent.of.adults.completing.some.college..1.3.years...1970, Percent.of.adults.completing.some.college.1.3.years..1980 = Percent.of.adults.completing.some.college..1.3.years...1980)
education_rates <- df_counties %>%
select(Area_Name, contains("unemployment_rate"),
contains("Percent"), -contains("Med")) %>%
select(Area_Name:Unemployment_rate_2015, contains("2010.2014")) %>%
gather(key = amountandyear, value = education_rate,
contains("percent")) %>%
separate(amountandyear, c("amount", "year"), sep="\\.\\.") %>%
select(-year) %>%
gather(key = year, value = unemployment_rate,
contains("Unemployment_rate")) %>%
arrange(Area_Name)
amounts <- c("Percent.of.adults.with.less.than.a.high.school.diploma",
"Percent.of.adults.with.a.high.school.diploma.only",
"Percent.of.adults.completing.some.college.1.3.years",
"Percent.of.adults.completing.four.years.of.college.or.higher",
"Percent.of.adults.completing.some.college.or.associate.s.degree",
"Percent.of.adults.with.a.bachelor.s.degree.or.higher")
translate <- c("No HS Diploma", "Only HS Diploma",
"Some College/Associate's",
"4-Years College/Bachelor's",
"Some College/Associate's",
"4-Years College/Bachelor's")
map <- data.frame(from=amounts ,to=translate)
education_rates$amount <- map$to[match(education_rates$amount, map$from)]
education_rates$amount <- factor(education_rates$amount, levels=translate)
education_rates$year <- sapply(education_rates$year, function(x) as.numeric(gsub("Unemployment_rate_", "", x)))
mean_unemployment_education <- education_rates %>%
filter(!is.na(education_rate), !is.na(unemployment_rate)) %>%
group_by(year, amount, education_rate) %>%
summarise(mean_unemployment = mean(unemployment_rate, na.rm=TRUE))
ggplot(aes(x=year, y=mean_unemployment,
color=education_rate, group=education_rate),
data=mean_unemployment_education) +
geom_line() +
facet_wrap(~amount)
# Chunk 27
education_rates$education_rate_bucket <-
cut(education_rates$education_rate, seq(from=0, to=100, by=1))
mean_unemployment_educationbucket <- education_rates %>%
filter(!is.na(education_rate), !is.na(unemployment_rate)) %>%
group_by(year, amount, education_rate_bucket) %>%
summarise(mean_unemployment = mean(unemployment_rate, na.rm=TRUE))
cc <- scales::seq_gradient_pal("blue", "red", "Lab")(seq(0,1,length.out=100))
ggplot(aes(x=year, y=mean_unemployment, color=education_rate_bucket), data=mean_unemployment_educationbucket) +
geom_line() +
scale_colour_manual(values=cc) +
facet_wrap(~amount)
# Chunk 28
ggplot(aes(x=education_rate, y=mean_unemployment, color=factor(year) ), data=mean_unemployment_education) +
geom_point(size=0.3) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
facet_wrap(~amount) +
scale_color_brewer(type='seq', guide=guide_legend(title='year'))
# Chunk 29
mean_unemployment_education %>%
group_by(amount) %>%
summarise(cor(education_rate, mean_unemployment))
# Chunk 30
birth_rates <- df_counties %>%
select(State, Area_Name, contains("R_birth")) %>%
gather(key = year, value = birth_rate, R_birth_2011:R_birth_2015)
death_rates <- df_counties %>%
select(State, Area_Name, contains("R_death")) %>%
gather(key = year, value = death_rate, R_death_2011:R_death_2015)
birth_rates$year <- sapply(
birth_rates$year, function (x) as.numeric(gsub("R_birth_", "", x)))
death_rates$year <- sapply(
death_rates$year, function (x) as.numeric(gsub("R_death_", "", x)))
change_rates <- inner_join(birth_rates, death_rates,
by = c('State', 'Area_Name', 'year'))
change_rates <- change_rates %>% unite(Area_and_State,
Area_Name, State, remove=FALSE)
ggplot(aes(factor(year),
birth_rate),
data = change_rates) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
ggplot(aes(factor(year),
death_rate),
data = change_rates) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
# Chunk 31
mean_change_rates <- change_rates %>%
group_by(State, year) %>%
filter(!is.na(birth_rate), !is.na(death_rate)) %>%
summarise(mean_birth_rate = mean(birth_rate),
mean_death_rate = mean(death_rate))
ggplot(aes(factor(year),
mean_birth_rate),
data = mean_change_rates) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
ggplot(aes(factor(year),
mean_death_rate),
data = mean_change_rates) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
# Chunk 32
map_counties <- map_data('county')
map_counties <- tbl_df(map_counties)
df_counties$Area_Name <- sapply(df_counties$Area_Name, tolower)
map_counties$subregion <- sapply(map_counties$subregion, tolower)
df_counties$Area_Name <- sapply(df_counties$Area_Name,
function (x) gsub('[[:punct:]]', '', x))
map_counties$subregion <- sapply(map_counties$subregion,
function (x) gsub('[[:punct:]]', '', x))
df_counties$Area_Name <- sapply(df_counties$Area_Name, function (x)
gsub(area_identifiers, '', x, ignore.case = TRUE))
map_counties$subregion <- sapply(map_counties$subregion, function (x)
gsub(area_identifiers, '', x, ignore.case = TRUE))
df_counties$Area_Name <- sapply(df_counties$Area_Name,
function (x) gsub('[[:space:]]', '', x))
map_counties$subregion <- sapply(map_counties$subregion,
function (x) gsub('[[:space:]]', '', x))
#match on state and converted subregions. Shouldn't be many that match on both state and subregion even if they end up blank in subregion like park
#df_counties$Area_Name[!(df_counties$Area_Name %in% map_counties$subregion)]
#map_counties$subregion[!(map_counties$subregion %in% df_counties$Area_Name)]
#Need to translate abbreviations to full to match with map_counties
state_translations <- df_states_level %>%
select(State, Area_Name)
state_translations$Area_Name <- sapply(state_translations$Area_Name, tolower)
df_counties$State <- state_translations$Area_Name[match(df_counties$State, state_translations$State)]
df_counties$unemploy_inc_2008 <- df_counties$Unemployment_rate_2008 - df_counties$Unemployment_rate_2007
df_counties$unemploy_inc_2009 <- df_counties$Unemployment_rate_2009 - df_counties$Unemployment_rate_2007
df_counties$unemploy_inc_2010 <- df_counties$Unemployment_rate_2010 - df_counties$Unemployment_rate_2007
df_counties$unemploy_inc_2011 <- df_counties$Unemployment_rate_2011 - df_counties$Unemployment_rate_2007
unemployment_map <- inner_join(df_counties, map_counties, by = c("Area_Name" = "subregion", "State" = "region"))
unemployment_map <- unemployment_map %>%
select(State, Area_Name, lat, long, group,
unemploy_inc_2008:unemploy_inc_2011) %>%
gather(key=year, value=unemploy_inc,
unemploy_inc_2008:unemploy_inc_2011)
unemployment_map$year <- sapply(unemployment_map$year, function(x)
as.numeric(gsub("unemploy_inc_", "", x)))
max_unemployment <- unemployment_map %>%
group_by(State, Area_Name) %>%
summarise(max_inc = max(unemploy_inc))
max_unemployment_map <- inner_join(max_unemployment,
map_counties,
by = c("Area_Name" = "subregion",
"State" = "region"))
ggplot(aes(x=long, y=lat, group=group, fill=max_inc),
data=max_unemployment_map) +
geom_polygon() +
coord_map()
# Chunk 33
library(gridExtra)
percent <- function(x) {
return(paste(as.character(x), "%", sep=""))
}
p1 <- ggplot(aes(x=State, y=PCTPOVALL_2014),
data=slice(poverty_order, 27:51)) +
geom_bar(stat='identity', fill="blue3") +
scale_x_discrete(limits=slice(poverty_order,27:51)$State) +
scale_y_continuous(limits=c(0,22), labels=percent) +
ylab("Poverty Rate") +
theme_bw() +
coord_flip()
p2 <- ggplot(aes(x=State, y=PCTPOVALL_2014),
data=slice(poverty_order, 1:27)) +
geom_bar(stat='identity', fill="blue3") +
scale_x_discrete(limits=slice(poverty_order,1:27)$State) +
scale_y_continuous(limits=c(0,22), labels=percent) +
ylab("Poverty Rate") +
theme_bw() +
coord_flip()
grid.arrange(p1, p2, ncol=2, top="Poverty Rates by State")
# Chunk 34
poverty_order %>%
summarise(stddev_poverty_rate = sd(PCTPOVALL_2014),
maximum_poverty_rate = max(PCTPOVALL_2014),
minimum_poverty_rate = min(PCTPOVALL_2014))
# Chunk 35
ggplot(aes(x=long, y=lat, group=group, fill=max_inc),
data=max_unemployment_map) +
geom_polygon() +
coord_map() +
scale_fill_gradient(name="Unemployment\nIncrease", low="blue", high="red",
labels=percent) +
ggtitle("Highest Unemployment Increase During 2007-2011") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_text(size=10),
legend.text = element_text(size=8))
# Chunk 36
fouryear <- mean_unemployment_education %>%
filter(amount == "4-Years College/Bachelor's")
ggplot(aes(x=education_rate, y=mean_unemployment, color=factor(year) ),
data=fouryear) +
geom_point(size=0.3, alpha=1/3) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_color_brewer(type='seq', guide=guide_legend(title='Year')) +
theme_dark() +
xlab("Education Rate") +
ylab("Unemployment Rate") +
scale_x_continuous(labels=percent) +
scale_y_continuous(labels=percent) +
ggtitle("Yearly Unemployment Rates\nPer 4-Year College Education Rate")
?ggsave
p1 <- ggplot(aes(x=long, y=lat, group=group, fill=max_inc),
data=max_unemployment_map) +
geom_polygon() +
coord_map() +
scale_fill_gradient(name="Unemployment\nIncrease", low="blue", high="red",
labels=percent) +
ggtitle("Highest Unemployment Increase During 2007-2011") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_text(size=10),
legend.text = element_text(size=8))
ggsave("unemploymentmap", p1)
ggsave("unemploymentmap.pdf", p1)
ggsave("unemploymentmap.png", p1)
ggsave("unemploymentmap.png", p1, width=4)
ggsave("unemploymentmap.png", p1, width=6)
