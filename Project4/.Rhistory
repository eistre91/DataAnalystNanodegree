heights - mean(heights)
sum((heights - mean(heights))^2)
sum((heights - mean(heights))^2)/8
sum((heights - mean(heights))^2)/7
sum((heights - mean(heights))^2)/8
bias_var <- sum((heights - mean(heights))^2)/8
sqrt(bias_var/8) * a
rep(21,4)
ages <- c(rep(21,4), rep(24,6), rep(26,7), rep(29,11), rep(40,2))
ages
mean(ages)
bias_var <- sum((ages - mean(ages))^2)/8
bias_var
bias_var <- sum((ages - mean(ages))^2)/30
bias_Var
bias_var
sqrt(19.65/30)*1.96
x <- c(3,4,5)
y <- c(7,8,9)
cor(x,y)
pop <- c(1, 2, 3, 4)
sample <- c( 1, 1.5, 2, 2.5, 1.5, 2, 2.5, 3, 2, 2.5, 3, 3.5, 2.5, 3, 3.5, 4)
sample
var(pop)
sqrt(5)/2
pop^2
sum((pop - mean(pop))^2)
5/4
sqrt(5/4)
sum((sample - mean(sample))^2)
sum((sample - mean(sample))^2)/16
sqrt(sum((sample - mean(sample))^2)/16)
sqrt(5/4)/sqrt(16)
SE <- sqrt(sum((sample - mean(sample))^2)/16)
sqrt(5/4)
sigma <- sqrt(5/4)
sigma / se
sigma / SE
sqrt(2)
pop <- c(1,2,3,4,5,6)
sum((pop - mean(pop))^2)/6
sqrt(sum((pop - mean(pop))^2)/6)/sqrt(2)
1.7078/sqrt(5)
3.49/sqrt(5)
40 - 2*2.71
40+2*2.71
40 - 1.96*2.71
40+1.96*2.71
40-1.96*1.01
40+1.96*1.01
40-2.33*1.01
40+2.33*1.01
std
std <- .107
SE <- std/sqrt(20)
SE
.13 + 1.96 * SE
.13 - 1.96 * SE
.64 / sqrt(20)
.73 / sqrt(20)
SEe <- .64 / sqrt(20)
SEl <- .73 / sqrt(20)
(8.94 - 7.5)/See
(8.94 - 7.5)/SEe
(8.35 - 8.2)/SEl
1-8212
1-.8212
10 / sqrt(25)
1.96 * 2
75 - 3.92
75 + 3.92
8 + 9 + 12 + 13 + 14 + 16
sample <- c(8, 9, 12, 13, 14, 16)
average(sample)
mean(sample)
2.8/sqrt(6)
SE <- 2.8/sqrt(6)
12 - 1.96 * SE
12 + 1.96 * SE
mu <- 180
sigma <- 18
SE <- 18/sqrt(9)
SE
(175 - mu)/SE
2.57 * SE
175 - 15.42
175 + 15.42
7.5 - 7.13
0.37 / 0.64
0.37 / (0.64/sqrt(20))
8.307.47
8.3 - 7.47
(8.3 - 7.47)/(2.31 / sqrt(30))
(8.3 - 7.47)/(2.41 / sqrt(30))
(8.3 - 7.47)/(2.41 / sqrt(50))
1-.9927
.0073 * 2
(7.8 - 7.47)/(2.41/sqrt(30))
(8.3 - 7.47)/(2.41/sqrt(30))
.360/sqrt(16)
22.793 - 22.965
(22.793 - 22.965)/(.09)
230/sqrt(5)
SE <- 230/sqrt(5)
(9640 - 7895)/SE
sample <- c(5, 19, 11, 23, 12, 7, 3, 21)
(mean(sample) - 10)/(sd(sample)/sqrt(8))
(1700 - 1830) / (200/sqrt(25))
(1700 - 1830) / (200)
1700 - (200/sqrt(25)) * 2.064
1700 + (200/sqrt(25)) * 2.064
(200/sqrt(25)) * 2.064
1700 + (200/sqrt(100)) * 2.064
(200/sqrt(100)) * 2.064
(200/sqrt(100)) * 1.984
1.646
[q]
[1]
1.2^2 + 2.7^2
sqrt(8.73)
t_crit <- 1.646
mu <- 9
std <- 2.95
9/(2.95/sqrt(1000))
mu <- 151
std <- 50
sem <- 50/sqrt(25)
-25 / sem
-25/std
-2.5^2 / (-2.5^2 + 24)
-2.5^2
2.5^2
(2.5^2) / (2.5^2 + 24)
1.711 * sem
2.064 * sem
151 - 20.64
151 + 20.64
126 - 20.64
126 + 20.64
pretest <- c(8, 7, 6, 9, 10, 5, 7, 11, 8, 7)
posttest <- c(5, 6, 4, 6, 5, 3, 2, 9, 4, 4)
differences <- prestest - posttest
differences <- pretest - posttest
differences
mean(pretest)
mean(posttest)
mean(differences)
differences <- posttest - pretest
tcrit <- -1.833
sem <- 1.33 / sqrt(10)
sem
mean(differences) / sem
tstat <- mean(differences) / sem
mean(pretest) - mean(posttest)
3 / 1.33
3 + 2.262 * sem
3 - 2.262 * sem
(33.5 - 31.2) / sqrt( (8.89)^2/6 + (10.16)^2/5 )
sqrt(31.36^2/7 + 34.27^2/11)
(33.14-18)/15.72
15.14 + 2.12 * 15.72
15.14 - 2.12 * 15.72
.96^2 / (.96^2 + 16)
5 + 6 + 1 + -4
8/ 4
x <- c(5, 6, 1, -4)
y <- c(3, 7, 8)
sum((x - mean(x))^2)
sum((y - mean(y))^2)
62+14
76/(3+2)
15.2/4 + 15.2/3
sqrt(15.2/4 + 15.2/3)
4/2.98
(481 + 322)/(206+219)
sp <- (481 + 322)/(206+219)
diff <- 35.8 - 31.6
se <- sqrt( sp^2/207 + sp^2/220 )
diff/se
diff
diff
diff/se
sp^2
sp^2/207
(sp^2)/207
sp^2/207 + sp^2/220
sqrt(0.033)
diff/.181
diff/se
sqrt(1/207 + 1/220)
diff/sp
sp <- (481+322)/(206+219)
sp
ssp <- sp^2
ssp
se <- sqrt( ssp/207 + ssp/220 )
se
se <- sqrt( (ssp/207 + ssp/220) )
se
dif
diff
diff <- 35.8 - 31.6
diff
diff/se
481/206
df <- 18
10-7
(10-7)/.94
(10-7)/2.33
3.19^2 / (3.19^2+18)
sp <- 0.13
ssp <- 0.13^2
ssp
se <- sqrt(ssp/18 + ssp/25)
se
3.8 - 2.1
1.7/se
se <- sqrt(sp/18 + sp/25)
se
3.8-2.1
1.7/se
481+322
sp <- 803/(207+220-2)
sp^2
ssp <- sp^2
se <- sqrt(ssp/207 + ssp/220)
diff/se
ssp
sp
(481+322)/(207+220-2)
se <- sqrt(sp/207 + sp/220)
diff/se
(481+322)/(207+220-2)
(481+322)/(207+220)
1/1.29
x <- c(2 ,-3,5,4,7)
y <- c(10, 13, 15, 10)
sum((x - mean(x))^2)
sum((y - mean(y))^2)
58+18
58+18/(4+3)
(58+18)/(4+3)
sp <- (58+18)/(4+3)
se <- sqrt(sp/5 + sp/4)
se
(mean(x) - mean(y))/se
snapzi <- c(15, 12, 14, 11)
irisa <- c(39, 45, 48, 60)
lolamoon <- c(65, 45, 32, 38)
mean(snapzi)
mean(irisa)
mean(lolamoon)
mean(c(snapzi, irisa, lolamoon))
grand <- mean(c(snapzi, irisa, lolamoon))
4 * ( (13 - grand)^2 + (48 - grand)^2 + (45 - grand)^2 )
sum((snapzi - mean(snapzi))^2) + sum((irisa - mean(irisa))^2) + sum((lolamoon - mean(lolamoon))^2)
3010.67/2
862/9
1505.33/95.78
A <- c(2, 4, 3)
B <- c(6, 5, 7)
C <- c(8, 9, 10)
sum(c(A, B, C))
mean(c(A,B,C))
mean(A)
(3-6)^2 + (9-6)^2
18*3
sum((A - mean(A))^2) + sum((B - mean(B))^2) + sum((C - mean(C))^2)
sum((c(A, B, C)-(mean(c(A,B,C))))^2)
4.34/sqrt(3)
54/60
placebo <- c(1.5, 1.3, 1.8, 1.6, 1.3)
drug1 <- c(1.6, 1.7, 1.9, 1.2)
drug2 <- c(2.0, 1.4, 1.5, 1.5, 1.8, 1.7, 1.4)
drug3 <- c(2.9, 3.1, 2.8, 2.7)
mean(placebo)
mean(drug1)
mean(drug2)
mean(drug3)
grand <- mean(c(placebo, drug1, drug2, drug3))
grand
length(placebo)
length(placebo) * (mean(placebo) - grand)^2 + length(drug1) * (mean(drug1) - grand)^2 + length(drug2) * (mean(drug2) - grand)^2 + length(drug3) * (mean(drug3) - grand)^2
sum((placebo - mean(placebo))^2) + sum((drug1 - mean(drug1))^2) + sum((drug2 - mean(drug2))^2) + sum((drug3 - mean(drug3))^2)
5.45 / 3
.836 / 16
1.81667/0.05225
5.45 / (5.45 + .83)
5.45 / (5.45 + .836)
(41 - 33)^2/33 + (59 - 67)^2/67
29/150
29/150 * 50
9.67*3
121/150
50 - 9.67
(7-9.67)^2/9.67 + (16-9.67)^2/9.67 + (6-9.67)^2/9.67 + (43-40.33)^2/40.33
(7-9.67)^2/9.67 + (16-9.67)^2/9.67 + (6-9.67)^2/9.67 + (43-40.33)^2/40.33 + (34-40.33)^2/40.33 + (44-40.33)^2/40.33
7.78/150
sqrt(7.78/150)
?facet_grid
library(ggplot2)
?facet_grid
?glm
?rpart
library(rpart)
?rpart
data(diamonds)
library(ggplot2)
data(diamonds)
names(diamonds)
ggplot(aes(x = x, y = price), data=diamonds) +
geom_point()
?diamonds
with(diamonds, cor.test(price, x))
with(diamonds, cor.test(price, x))
with(diamonds, cor.test(price, y))
with(diamonds, cor.test(price, z))
ggplot(aes(x = depth, y = price), data=diamonds) +
geom_point()
ggplot(aes(x = depth, y = price), data=diamonds) +
geom_point(alpha = 1/20)
?diamonds
ggplot(aes(x = depth, y = price), data=diamonds) +
geom_point(alpha = 1/20) +
scale_x_continuous(limits=c(55,70))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) +
scale_x_continuous(breaks=seq(0, 80, 2))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) +
scale_x_continuous(breaks=seq(min(diamonds$depth), 80, 2))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) +
scale_x_continuous(breaks=seq(min(diamonds$depth), 80, 2),
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) +
scale_x_continuous(breaks=seq(min(diamonds$depth), 80, 2),
limits=c(54,72))
,
+
()
)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) +
scale_x_continuous(breaks=seq(0, 80, 2),
limits=c(54,72))
with(diamonds, cor.test(depth, price))
?quantile
ggplot(aes(x=carat, y=price), data=diamonds) +
xlim(0, quantile(diamonds$carat, probs=.01)) +
ylim(0, quantile(diamonds$price, probs=.01))
ggplot(aes(x=carat, y=price), data=diamonds) +
xlim(0, quantile(diamonds$carat, probs=.99)) +
ylim(0, quantile(diamonds$price, probs=.99))
ggplot(aes(x=carat, y=price), data=diamonds) +
geom_point() +
xlim(0, quantile(diamonds$carat, probs=.99)) +
ylim(0, quantile(diamonds$price, probs=.99))
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
diamonds$volume
with(diamonds, volume <- x * y * z)
diamonds$volume
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
diamonds$volume
with(diamonds, volume <- x * y * z)
diamonds$volume
?with
ggplot(aes(x=volume, y=price), data=diamonds) +
geom_point()
with(subset(diamonds, volume > 0 && volume <= 800), cor.test(price, volume))
with(diamonds, cor.test(price, volume))
with(subset(diamonds, volume > 0 && volume <= 800), cor.test(price, volume))
with(subset(diamonds, volume > 0 & volume <= 800), cor.test(price, volume))
?geom_smooth
ggplot(aes(x=volume, y=price), data=subset(diamonds, volume > 0 & volume <= 800)) +
geom_point() +
geom_smooth (method="lm", color="red")
ggplot(aes(x=volume, y=price), data=subset(diamonds, volume > 0 & volume <= 800)) +
geom_point() +
geom_smooth (method="lm", color="red") +
ylim(0,20000)
ggplot(aes(x=volume, y=price), data=subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha=1/100) +
geom_smooth (method="lm", color="red") +
ylim(0,20000)
library(dplyr)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
diamondsByClarity
library(gridExtra)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
diamonds_mp_by_color
bp1 <- ggplot(aes(x=color, y=mean_price), data=diamonds_mp_by_color) +
geom_bar()
bp2 <- ggplot(aes(x=clarity, y=mean_price, data=diamonds_mp_by_clarity) +
geom_bar()
grid.arrange(bp1, bp2, ncol=2)
str(grid.arrange)
?grid.arrange
grid.arrange
grid.arrange(bp1, bp2, ncol=2)
bp1 <- ggplot(aes(x=color, y=mean_price), data=diamonds_mp_by_color) +
geom_bar()
bp2 <- ggplot(aes(x=clarity, y=mean_price, data=diamonds_mp_by_clarity) +
geom_bar()
bp2 <- ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
bp2 <- ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_bar()
grid.arrange(bp1, bp2, ncol=2)
?geom_bar
bp1 <- ggplot(aes(x=color, y=mean_price), data=diamonds_mp_by_color) +
geom_bar(stat="identity")
bp2 <- ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_bar(stat="identity")
grid.arrange(bp1, bp2, ncol=2)
library(ggplot2)
library(dplyr)
data(diamonds)
names(diamonds)
ggplot(aes(x=price), data=diamonds) +
geom_histogram(aes(color=cut)) +
facet_wrap( ~ color)
ggplot(aes(x=price), data=diamonds) +
geom_histogram(aes(color=cut)) +
facet_wrap( ~ color) +
scale_fill_brewer(type = 'qual')
ggplot(aes(x=price), data=diamonds) +
geom_histogram(aes(color=cut)) +
facet_wrap( ~ color) +
scale_fill_brewer(type = 'qual') +
scale_x_log10()
ggplot(aes(x=price), data=diamonds) +
geom_histogram(aes(fill=cut)) +
facet_wrap( ~ color) +
scale_fill_brewer(type = 'qual') +
scale_x_log10()
ggplot(aes(x=price, y=table), data=diamonds) +
geom_point(aes(color=cut)) +
scale_color_brewer(type = 'qual')
ggplot(aes(x=table, y=price), data=diamonds) +
geom_point(aes(color=cut)) +
scale_color_brewer(type = 'qual')
with(diamonds, diamonds$volume <- x*y*z)
diamonds
diamonds$volume
with(diamonds, x*y*z)
diamonds$volume <- with(diamonds, x*y*z)
diamonds$volume
head(diamonds)
?quantile
big_volume <- quantile(diamonds$volume, probs = 0.1)
big_volume <- quantile(diamonds$volume, probs = 0.99)
big_volume
ggplot(aes(x=x*y*z, y=price),
data=subset(diamonds, volume < big_volume)) +
geom_point(aes(color=clarity)) +
scale_y_log10() +
scale_color_brewer(type='div')
pf <- read.delim('/datasets/ud651/pseudo_facebook.tsv')
setwd('C:/DataAnalystNanodegree/Project4')
pf <- read.delim('/datasets/ud651/pseudo_facebook.tsv')
pf <- read.delim('pseudo_facebook.tsv')
names(pf)
pf$prop_initiated <- with(pf, friend_count/friendships_initiated)
?ifelse
pf$prop_initiated <- with(pf, ifelse(friend_count > 0, friend_count/friendships_initiated, NA)
pf$prop_initiated <- with(pf, ifelse(friend_count > 0, friend_count/friendships_initiated, NA))
pf$prop_initiated <- with(pf, ifelse(friend_count > 0, friend_count/friendships_initiated, NA))
pf$prop_initiated <- with(pf, ifelse(friend_count > 0 & friendships_initiated > 0, friend_count/friendships_initiated, NA))
pf$prop_initiated
pf$year_joined <- floor(2014 - pf$tenure / 365)
pf$year_joined.bucket <- cut(pf$year_joined, breaks=c(2004,2009,2011,2012,2014))
ggplot(aes(x=tenure, y=prop_initiated), data=pf) +
geom_line(stat='summary', fun.y='median')
ggplot(aes(x=tenure, y=prop_initiated), data=pf) +
geom_line(aes(color=year_joined.bucket), stat='summary', fun.y='median')
pf$prop_initiated <- with(pf, ifelse(friend_count > 0, friendships_initiated/friend_count, NA))
ggplot(aes(x=tenure, y=prop_initiated), data=pf) +
geom_line(aes(color=year_joined.bucket), stat='summary', fun.y='median')
ggplot(aes(x=round(tenure/7)*7, y=prop_initiated), data=pf) +
geom_line(aes(color=year_joined.bucket), stat='summary', fun.y='median')
pf %>%
group_by(year_joined.bucket) %>%
summarise(mean_prop_initiated = mean(prop_initiated),
n = n()) %>%
arrange(mean_prop_initiated)
pf %>%
group_by(year_joined.bucket) %>%
summarise(mean_prop_initiated = mean(prop_initiated),
n = n())
pf %>%
group_by(year_joined.bucket) %>%
filter(!is.na(prop_initiated)) %>%
summarise(mean_prop_initiated = mean(prop_initiated),
n = n())
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point(aes(color=color)) +
facet_wrap( ~ clarity) +
scale_color_brewer(type='div')
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_jitter(aes(color=color)) +
facet_wrap( ~ clarity) +
scale_color_brewer(type='div')
