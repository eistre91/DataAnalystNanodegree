clear()
clear
c <- 10
c(c = c)
c(a = 5)
202
f <- function(x) {
f <- function(x) {
f <- function(x) {
x ^ 2
}
}
f(x) + 1
f(x) * 2
}
f(10)
f <- function(x) {
f <- function(x) {
f <- function(x) {
x ^ 2
}
f(x) + 1
}
f(x) * 2
}
f(10)
add <- function(x) {
function(y) x + y
}
adders <- lapply(1:10, add)
adders
adders[[1]](1)
adders[[10]](1)
adders[[1]](1)
add <- function(x) {
function(y) x + y
}
adders <- lapply(1:10, add)
adders[[1]](1)
adders[[10]](1)
add <- function(x) {
force(x)
function(y) x + y
}
adders2 <- lapply(1:10, add)
adders2[[1]](10)
adders2[[10]](10)
adders2[[1]](1)
adders2[[10]](1)
?sample
?runif
?cor
x <- sample(replace = TRUE, 20, x = c(1:10, NA))
x <- sample(c(1:10, NA), 20, replace = TRUE)
y <- runif(min = 0, max = 1, 20)
y <- runif(20, min = 0, max = 1)
cor(m = "k", y = y, u = "p", x = x)
cor(x, y, use="p", method="k")
f1 <- function(x = {y <- 1; 2}, y = 0) {
x + y
}
f1()
f1 <- function(x = {y <- 1; 2}, y = 0) {
x
y
x + y
}
f1()
f1 <- function(x = {y <- 1; 2}, y = 0) {
print(x)
print(y)
x + y
}
f1()
f1 <- function(x = {y <- 1; 2}, y = 0) {
y
x + y
}
f1()
f1 <- function(x = {y <- 1; 2}, y = 0) {
print(y)
x + y
}
f1()
f1 <- function(x = {y <- 1; 2}, y = 0) {
substitute(y)
x + y
}
f1()
f1 <- function(x = {y <- 1; 2}, y = 0) {
print(substitute(y))
x + y
}
f1()
f1 <- function(x = {y <- 1; 2}, y = 0) {
print(y == 0)
print(x)
print(y == 1)
x + y
}
f1()
f1 <- function(x = {y <- 1; 2}, y = 0) {
print(y == 0)
print(x)
print(y == 0)
x + y
}
f1()
f2 <- function(x = z) {
z <- 100
x
}
f2()
funs
objs <- mget(ls("package:base"), inherits = TRUE)
funs <- Filter(is.function, objs)
names(funs)
?grpe
?grep
grep("*+<-", names(funs))
grep("*+\<\-", names(funs))
grep(".*<-", names(funs))
funs[grep(".*<-", names(funs))]
names(funs[grep(".*<-", names(funs))])
replacement_functions <- funs[grep(".*<-", names(funs))]
lapply(replacement_functions, is.primitive)
replacement_functions[lapply(replacement_functions, is.primitive)]
replacement_functions[lapply(replacement_functions, is.primitive) == TRUE]
?xor
xor(TRUE, FALSE)
xor(TRUE, TRUE)
xor(FALSE, FALSE)
TRUE %xor% FALSE
TRUE %xor% TRUE
`%xor%` <- function(x, y) xor(x, y)
xor(TRUE, FALSE)
xor(TRUE, TRUE)
TRUE %xor% FALSE
TRUE %xor% TRUE
?intersect
x <- c(1, 2, 3)
x
chaos(x) <- 5
`chaos<-` <- function(x, value) {
x[sample(length(x))] <- value
x
}
x <- c(1, 2, 3)
x
chaos(x) <- 5
x
?sample
x[sample(length(x), size=1)] <- value
x
`chaos<-` <- function(x, value) {
x[sample(length(x), size=1)] <- value
x
}
x <- c(1, 2, 3)
x
chaos(x) <- 5
x
chaos(x) <- 6
x
`chaos<-` <- function(x, value) {
x[sample(length(x), size=1)] <- value
x
}
x <- c(1, 2, 3)
x
chaos(x) <- 5
x
chaos(x) <- 6
x
?source
?in_Dir
?library()
?detach
?options
options()
?par
?dev
?dev.cur
?dev.cur()
dev.cur()
?sink
?tempfile()
?sink
?capture.output
capture.output
dbinom(10, .5)
dbinom(0, 10, .5)
dbinom(1, 10, .5)
dbinom(10, 10, .5)
dbinom(.5, 10, .5)
dbinom(5, 10, .5)
dbinom(0, 10, .8
)
dbinom(c(0,1,2), 10, .8)
dbinom(c(0,1,2,3), 10, .8)
dbinom(c(0,1,2,3,4), 10, .8)
dbinom(c(0,1,2,3,4,5), 10, .8)
dbinom(c(0,1,2,3,4,5,6), 10, .8)
pbinom(5, 10, .8)
pbinom(6, 10, .8)
heights <- c(199, 200, 201, 202, 203, 204, 205, 206)
mean(heights)
var(heights)
std(heights)
?std
?var
sqrt(var(heights))
sqrt(var(heights))/sqrt(length(heights))
sqrt(var(heights))/sqrt(length(heights)) * 2.635
sd(heights)
a <- 2.635
sd(heights)/sqrt(8)
sd(heights)/sqrt(8) * a
sd(heights)/sqrt(7) * a
sd(heights)/sqrt(8) * 2.365
sd(heights) / sqrt(8)
sd(heights) / sqrt(8) * 2.365
heights
mean(heights)
a <- 2.365
sqrt(var(heights)/8)
sqrt(var(heights)/8) * a
sqrt(var(heights)/9) * a
sqrt(var(heights)/10) * a
sqrt(var(heights)/9) * 2.635
?var
heights - mean(heights)
sum((heights - mean(heights))^2)
sum((heights - mean(heights))^2)/8
sum((heights - mean(heights))^2)/7
sum((heights - mean(heights))^2)/8
bias_var <- sum((heights - mean(heights))^2)/8
sqrt(bias_var/8) * a
rep(21,4)
ages <- c(rep(21,4), rep(24,6), rep(26,7), rep(29,11), rep(40,2))
ages
mean(ages)
bias_var <- sum((ages - mean(ages))^2)/8
bias_var
bias_var <- sum((ages - mean(ages))^2)/30
bias_Var
bias_var
sqrt(19.65/30)*1.96
x <- c(3,4,5)
y <- c(7,8,9)
cor(x,y)
pop <- c(1, 2, 3, 4)
sample <- c( 1, 1.5, 2, 2.5, 1.5, 2, 2.5, 3, 2, 2.5, 3, 3.5, 2.5, 3, 3.5, 4)
sample
var(pop)
sqrt(5)/2
pop^2
sum((pop - mean(pop))^2)
5/4
sqrt(5/4)
sum((sample - mean(sample))^2)
sum((sample - mean(sample))^2)/16
sqrt(sum((sample - mean(sample))^2)/16)
sqrt(5/4)/sqrt(16)
SE <- sqrt(sum((sample - mean(sample))^2)/16)
sqrt(5/4)
sigma <- sqrt(5/4)
sigma / se
sigma / SE
sqrt(2)
pop <- c(1,2,3,4,5,6)
sum((pop - mean(pop))^2)/6
sqrt(sum((pop - mean(pop))^2)/6)/sqrt(2)
1.7078/sqrt(5)
3.49/sqrt(5)
40 - 2*2.71
40+2*2.71
40 - 1.96*2.71
40+1.96*2.71
40-1.96*1.01
40+1.96*1.01
40-2.33*1.01
40+2.33*1.01
std
std <- .107
SE <- std/sqrt(20)
SE
.13 + 1.96 * SE
.13 - 1.96 * SE
.64 / sqrt(20)
.73 / sqrt(20)
SEe <- .64 / sqrt(20)
SEl <- .73 / sqrt(20)
(8.94 - 7.5)/See
(8.94 - 7.5)/SEe
(8.35 - 8.2)/SEl
1-8212
1-.8212
10 / sqrt(25)
1.96 * 2
75 - 3.92
75 + 3.92
8 + 9 + 12 + 13 + 14 + 16
sample <- c(8, 9, 12, 13, 14, 16)
average(sample)
mean(sample)
2.8/sqrt(6)
SE <- 2.8/sqrt(6)
12 - 1.96 * SE
12 + 1.96 * SE
mu <- 180
sigma <- 18
SE <- 18/sqrt(9)
SE
(175 - mu)/SE
2.57 * SE
175 - 15.42
175 + 15.42
7.5 - 7.13
0.37 / 0.64
0.37 / (0.64/sqrt(20))
8.307.47
8.3 - 7.47
(8.3 - 7.47)/(2.31 / sqrt(30))
(8.3 - 7.47)/(2.41 / sqrt(30))
(8.3 - 7.47)/(2.41 / sqrt(50))
1-.9927
.0073 * 2
(7.8 - 7.47)/(2.41/sqrt(30))
(8.3 - 7.47)/(2.41/sqrt(30))
.360/sqrt(16)
22.793 - 22.965
(22.793 - 22.965)/(.09)
230/sqrt(5)
SE <- 230/sqrt(5)
(9640 - 7895)/SE
sample <- c(5, 19, 11, 23, 12, 7, 3, 21)
(mean(sample) - 10)/(sd(sample)/sqrt(8))
(1700 - 1830) / (200/sqrt(25))
(1700 - 1830) / (200)
1700 - (200/sqrt(25)) * 2.064
1700 + (200/sqrt(25)) * 2.064
(200/sqrt(25)) * 2.064
1700 + (200/sqrt(100)) * 2.064
(200/sqrt(100)) * 2.064
(200/sqrt(100)) * 1.984
1.646
[q]
[1]
1.2^2 + 2.7^2
sqrt(8.73)
t_crit <- 1.646
mu <- 9
std <- 2.95
9/(2.95/sqrt(1000))
mu <- 151
std <- 50
sem <- 50/sqrt(25)
-25 / sem
-25/std
-2.5^2 / (-2.5^2 + 24)
-2.5^2
2.5^2
(2.5^2) / (2.5^2 + 24)
1.711 * sem
2.064 * sem
151 - 20.64
151 + 20.64
126 - 20.64
126 + 20.64
pretest <- c(8, 7, 6, 9, 10, 5, 7, 11, 8, 7)
posttest <- c(5, 6, 4, 6, 5, 3, 2, 9, 4, 4)
differences <- prestest - posttest
differences <- pretest - posttest
differences
mean(pretest)
mean(posttest)
mean(differences)
differences <- posttest - pretest
tcrit <- -1.833
sem <- 1.33 / sqrt(10)
sem
mean(differences) / sem
tstat <- mean(differences) / sem
mean(pretest) - mean(posttest)
3 / 1.33
3 + 2.262 * sem
3 - 2.262 * sem
(33.5 - 31.2) / sqrt( (8.89)^2/6 + (10.16)^2/5 )
sqrt(31.36^2/7 + 34.27^2/11)
(33.14-18)/15.72
15.14 + 2.12 * 15.72
15.14 - 2.12 * 15.72
.96^2 / (.96^2 + 16)
5 + 6 + 1 + -4
8/ 4
x <- c(5, 6, 1, -4)
y <- c(3, 7, 8)
sum((x - mean(x))^2)
sum((y - mean(y))^2)
62+14
76/(3+2)
15.2/4 + 15.2/3
sqrt(15.2/4 + 15.2/3)
4/2.98
(481 + 322)/(206+219)
sp <- (481 + 322)/(206+219)
diff <- 35.8 - 31.6
se <- sqrt( sp^2/207 + sp^2/220 )
diff/se
diff
diff
diff/se
sp^2
sp^2/207
(sp^2)/207
sp^2/207 + sp^2/220
sqrt(0.033)
diff/.181
diff/se
sqrt(1/207 + 1/220)
diff/sp
sp <- (481+322)/(206+219)
sp
ssp <- sp^2
ssp
se <- sqrt( ssp/207 + ssp/220 )
se
se <- sqrt( (ssp/207 + ssp/220) )
se
dif
diff
diff <- 35.8 - 31.6
diff
diff/se
481/206
df <- 18
10-7
(10-7)/.94
(10-7)/2.33
3.19^2 / (3.19^2+18)
sp <- 0.13
ssp <- 0.13^2
ssp
se <- sqrt(ssp/18 + ssp/25)
se
3.8 - 2.1
1.7/se
se <- sqrt(sp/18 + sp/25)
se
3.8-2.1
1.7/se
481+322
sp <- 803/(207+220-2)
sp^2
ssp <- sp^2
se <- sqrt(ssp/207 + ssp/220)
diff/se
ssp
sp
(481+322)/(207+220-2)
se <- sqrt(sp/207 + sp/220)
diff/se
(481+322)/(207+220-2)
(481+322)/(207+220)
1/1.29
x <- c(2 ,-3,5,4,7)
y <- c(10, 13, 15, 10)
sum((x - mean(x))^2)
sum((y - mean(y))^2)
58+18
58+18/(4+3)
(58+18)/(4+3)
sp <- (58+18)/(4+3)
se <- sqrt(sp/5 + sp/4)
se
(mean(x) - mean(y))/se
t_stat
t_statistic
library(ggplot2)
library(dplyr)
#setwd('C:/DataAnalystNanodegree/Project1StroopEffect/')
stroop <- read.csv('stroopdata.csv', header=TRUE)
mean_c <- mean(stroop$Congruent)
mean_i <- mean(stroop$Incongruent)
std_c <- sd(stroop$Congruent)
std_i <- sd(stroop$Incongruent)
diffs <- stroop$Incongruent - stroop$Congruent
mean_diffs <- mean(diffs)
std_diffs <- sd(diffs)
sem <- std_diffs / sqrt(24)
t_stat <- mean_diffs / sem
mean_c <- mean(stroop$Congruent)
mean_i <- mean(stroop$Incongruent)
std_c <- sd(stroop$Congruent)
stroop <- read.csv('stroopdata.csv', header=TRUE)
setwd('C:/DataAnalystNanodegree/Project1StroopEffect/')
stroop <- read.csv('stroopdata.csv', header=TRUE)
mean_c <- mean(stroop$Congruent)
mean_i <- mean(stroop$Incongruent)
std_c <- sd(stroop$Congruent)
std_i <- sd(stroop$Incongruent)
diffs <- stroop$Incongruent - stroop$Congruent
mean_diffs <- mean(diffs)
std_diffs <- sd(diffs)
sem <- std_diffs / sqrt(24)
t_stat <- mean_diffs / sem
t_stat
mean_diffs / std_diffs
?t,test
?t.test
t.test(diffs)
